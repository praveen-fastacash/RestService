package au.com.prav.gcd;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.0
 * 2017-12-14T08:52:33.087+11:00
 * Generated source version: 3.2.0
 * 
 */
@WebServiceClient(name = "GcdService", 
                  wsdlLocation = "classpath:wsdl/Gcd.wsdl",
                  targetNamespace = "http://www.prav.com.au/gcd/") 
public class GcdService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.prav.com.au/gcd/", "GcdService");
    public final static QName Gcd = new QName("http://www.prav.com.au/gcd/", "Gcd");
    public final static QName GcdList = new QName("http://www.prav.com.au/gcd/", "GcdList");
    public final static QName GcdSum = new QName("http://www.prav.com.au/gcd/", "GcdSum");
    static {
        URL url = GcdService.class.getClassLoader().getResource("wsdl/Gcd.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(GcdService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "classpath:wsdl/Gcd.wsdl");
        }       
        WSDL_LOCATION = url;   
    }

    public GcdService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public GcdService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public GcdService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public GcdService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public GcdService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public GcdService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns GcdPort
     */
    @WebEndpoint(name = "Gcd")
    public GcdPort getGcd() {
        return super.getPort(Gcd, GcdPort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns GcdPort
     */
    @WebEndpoint(name = "Gcd")
    public GcdPort getGcd(WebServiceFeature... features) {
        return super.getPort(Gcd, GcdPort.class, features);
    }


    /**
     *
     * @return
     *     returns GcdListPort
     */
    @WebEndpoint(name = "GcdList")
    public GcdListPort getGcdList() {
        return super.getPort(GcdList, GcdListPort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns GcdListPort
     */
    @WebEndpoint(name = "GcdList")
    public GcdListPort getGcdList(WebServiceFeature... features) {
        return super.getPort(GcdList, GcdListPort.class, features);
    }


    /**
     *
     * @return
     *     returns GcdSumPort
     */
    @WebEndpoint(name = "GcdSum")
    public GcdSumPort getGcdSum() {
        return super.getPort(GcdSum, GcdSumPort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns GcdSumPort
     */
    @WebEndpoint(name = "GcdSum")
    public GcdSumPort getGcdSum(WebServiceFeature... features) {
        return super.getPort(GcdSum, GcdSumPort.class, features);
    }

}
